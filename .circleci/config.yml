version: 2
jobs:
  build:
    working_directory: ~/LGML
    docker:
      - image: ubuntu
        environment:
          ARCH_FLAGS: -m64 # arch for linux makefile
          DST_LGML_PATH: /tmp/build
    steps:
      - checkout
      - run:
          name: install LGML dependencies
          command: |
            apt-get -qq update
            apt-get install -y git
            git submodule update --init --recursive
            sh Scripts/linux/installDeps.sh && sh Scripts/linux/installDevDeps.sh

      - run:
          name: build and package LGML
          command: |
            sh Scripts/linux/installExportDeps.sh
            python3 Scripts/buildScript.py --configure --exportpath="$DST_LGML_PATH" --os=linux --configuration=Release
            python3 Scripts/buildScript.py --build --package --export
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "$DST_LGML_PATH/dependencies.txt"
      - store_artifacts:
          path: /tmp/build/


  build32:
    working_directory: ~/LGML
    docker:
      - image: dockcross/linux-x86
        environment:
          PKG_CONFIG_PATH: /usr/lib/i386-linux-gnu/pkgconfig/
          CROSS_ARCH: i386
          ARCH_FLAGS: -m32 # arch for JUCEs linux makefile
          DST_LGML_PATH: /tmp/build32

    steps:
      - checkout
      - run:
          name: install LGML32 dependencies
          command: |
            apt-get -qq update
            apt-get install -y git
            git submodule update --init --recursive
            sh Scripts/linux/installDeps.sh && sh Scripts/linux/installDevDeps.sh 
      - run:
          name: build and package LGML32
          command: |
            sh Scripts/linux/installExportDeps.sh
            python3 Scripts/buildScript.py --configure --exportpath="$DST_LGML_PATH" --os=linux --configuration=Release 
            python3 Scripts/buildScript.py --build --package --export
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "$DST_LGML_PATH/dependencies.txt"
      - store_artifacts:
          path: /tmp/build32 #$DST_LGML_PATH

###############
# build Rasp
##############

  build_rasp:
    working_directory: ~/LGML
    docker:
      - image: ubuntu
        environment:
          CROSS_ARCH: armhf
          ARCH_FLAGS: -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard -ffast-math # arch flags for JUCEMakefile -> RPI3
          DST_LGML_PATH: /tmp/buildRasp
          PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig

    steps:
      - checkout
      - run:
          name: install LGMLRasp dependencies
          command: |
            set -x
            apt-get -qq update
            apt-get install -y git
            git submodule update --init --recursive
            apt-get install -y g++-arm-linux-gnueabihf pkg-config
            . /etc/lsb-release
            echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports $DISTRIB_CODENAME main universe" >> /etc/apt/sources.list
            echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports $DISTRIB_CODENAME-updates main universe" >> /etc/apt/sources.list
            sh Scripts/linux/installDeps.sh && sh Scripts/linux/installDevDeps.sh

      - run:
          name: build and package LGMLRasp
          command: |
            set -x
            export CXX=arm-linux-gnueabihf-g++
            sh Scripts/linux/installExportDeps.sh
            python3 Scripts/buildScript.py --configure --exportpath="$DST_LGML_PATH" --os=linux --configuration=Release
            python3 Scripts/buildScript.py --build --package --export
            arm-linux-gnueabihf-objdump -x ~/LGML/Builds/LinuxMakefile/build/LGML | grep NEEDED > "$DST_LGML_PATH/dependencies.txt"

      - store_artifacts:
          path: /tmp/buildRasp/




  buildOSX:
    working_directory: ~/LGML
    machine:
      xcode:
        version: 8.2
      environment:
        DST_LGML_PATH: /tmp/build32

    steps:
      - checkout
      - run:
          name: install LGML32 dependencies
          command: |
            git submodule update --init --recursive
            sh Scripts/osx/installDeps.sh && sh Scripts/osx/installDevDeps.sh 
      - run:
          name: build and package LGML32
          command: |
            sh Scripts/osx/installExportDeps.sh
            python3 Scripts/buildScript.py --configure --exportpath="$DST_LGML_PATH" --os=osx --configuration=Release 
            python3 Scripts/buildScript.py --build --package --export
      - store_artifacts:
          path: /tmp/build32 #$DST_LGML_PATH


workflows:
  version: 2
  build_all_platforms:
    jobs:
      - buildOSX
      - build_rasp
      - build
      - build32



general:
  branches:
    only:
      - master
      - ci/all
      - ci/circleci
