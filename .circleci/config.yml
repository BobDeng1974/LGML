version: 2
jobs:
  build:
    working_directory: ~/LGML
    docker:
      - image: ubuntu
        environment:
          # PKG_CONFIG_PATH: /usr/lib/i386-linux-gnu/pkgconfig/
          # TARGET_CPU: i386
          TARGET_ARCH: -m64 # arch for linux makefile
          DST_LGML_PATH: /tmp/build/
    steps:
      - checkout
      - run:
          name: install LGML dependencies
          command: |
            apt-get -qq update
            apt-get install -y git
            git submodule update --init --recursive --remote
            sh Scripts/linux/installDeps.sh && sh Scripts/linux/installDevDeps.sh

      - run:
          name: build and package LGML
          command: |
            python Scripts/buildScript.py --build --package --beta --exportpath="$DST_LGML_PATH" --os=linux --configuration=Ubuntu;
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "$DST_LGML_PATH/dependencies.txt"
      - store_artifacts:
          path: /tmp/build/


  build32:
    working_directory: ~/LGML
    docker:
      - image: dockcross/linux-x86
        environment:
          PKG_CONFIG_PATH: /usr/lib/i386-linux-gnu/pkgconfig/
          TARGET_CPU: i386
          TARGET_ARCH: -m32 # arch for JUCEs linux makefile
          DST_LGML_PATH: /tmp/build32/

    steps:
      - checkout
      - run:
          name: install LGML32 dependencies
          command: |
            apt-get -qq update
            apt-get install -y git
            git submodule update --init --recursive --remote
            sudo sh Scripts/linux/installDeps.sh && sudo  sh Scripts/linux/installDevDeps.sh
      - run:
          name: build and package LGML32
          command: |
            python Scripts/buildScript.py --package --beta --exportpath="$DST_LGML_PATH" --os=linux;
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "$DST_LGML_PATH/dependencies.txt"
      - store_artifacts:
          path: /tmp/build32 #$DST_LGML_PATH

  build_rasp:
    working_directory: /media/rpi/LGML
    docker:
      - image: ryankurte/docker-rpi-emu 
        environment:
          # PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig/
          TARGET_CPU: armhf
          TARGET_ARCH: -march=armv6 -mfpu=vfp -mfloat-abi=hard # arch for JUCEs linux makefile
          DST_LGML_PATH: /tmp/buildRasp/
          # CPPFLAGS : -I/usr/include -I/usr/include/arm-linux-gnueabihf/

    steps:
      - checkout
      - restore_cache:
          keys:
            - rpi-image
      - run:
          name: download raspi image
          command: |
            mkdir -p /tmp/downloads
            wget -nc -P /tmp/downloads https://downloads.raspberrypi.org/raspbian_latest && ls /tmp/downloads
      - save_cache:
          key: rpi-image
          paths:
            - /tmp/downloads
      - run:
          name: install LGMLRasp dependencies
          command: |
            apt-get -qq update
            apt-get -qq install -y git
            git submodule update --init --recursive --remote
            rm -rf /tmp/images
            mkdir -p /tmp/images
            unzip /tmp/downloads/raspbian_latest -d /tmp/images/ && ls /tmp/images
            sh ~/run.sh /tmp/images/raspbian_latest 'pwd ; ls; ls / ;' 
            sh ~/run.sh /tmp/images/raspbian_latest 'apt-get -qq update && sudo sh Scripts/linux/installDeps.sh && sudo  sh Scripts/linux/installDevDeps.sh'
      - run:
          name: build and package LGMLRasp
          command: |
            sh ~/run.sh /tmp/images/raspbian_latest 'python Scripts/buildScript.py --package --beta --exportpath="/tmp/buildRasp" --os=linux;'
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "/tmp/buildRasp/dependencies.txt"
      - store_artifacts:
          path: 
            - /media/rpi/tmp/buildRasp/ # rpi chroot + $DST_LGML_PATH  
            - /tmp/images/ # store image as we have it

workflows:
  version: 2
  build_all_platforms:
    jobs:
      - build
      - build32
      - build_rasp


general:
  branches:
    only:
      - master
      - develop
      - feature/ci
